@page
@model NapocaBike.Pages.Locations.CreateModel

@{
    ViewData["Title"] = "Create";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Proposed Locations</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <style>
        /* Add the provided CSS styles here */

        /* Custom styles for Proposed Locations page */
        .row {
            display: flex;
            flex-wrap: wrap;
            margin-left: -15px;
            margin-right: -15px;
        }

        .col-md-4,
        .col-md-8 {
            position: relative;
            width: 100%;
            padding-left: 15px;
            padding-right: 15px;
        }

        .col-md-4 {
            flex: 0 0 33.333333%;
            max-width: 33.333333%;
            background-color: rgba(255, 255, 255, 0.8);
            padding: 20px;
            border-radius: 10px;
        }

        .col-md-8 {
            flex: 0 0 66.666667%;
            max-width: 66.666667%;
            padding-left: 30px;
        }

       h1 {
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
            color: #226A80;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-control {
            display: block;
            width: 100%;
            padding: .375rem .75rem;
            font-size: 1rem;
            line-height: 1.5;
            color: #495057;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #ced4da;
            border-radius: .25rem;
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
            margin-bottom: 5px;
        }

        .btn-primary {
            color: #fff;
            background-color: #D9AF32;
            border-color: #D9AF32;
            font-family: 'Poppins', sans-serif;
        }

        .btn-primary:hover {
            background-color: #F25050;
            border-color: #F25050;
        }

        #map {
            background-color: #f8f9fa;
            border-radius: 10px;
            box-shadow: 0 1px 3px rgba(0,0,0,.05), 0 1px 2px rgba(0,0,0,.1);
        }

        a {
            color: #D9AF32;
            text-decoration: none;
            font-family: 'Poppins', sans-serif;
            font-weight: 600;
        }

        a:hover {
            color: #F25050;
            text-decoration: none;
        }
    </style>
</head>
<body>
    <h1>Proposed Locations</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Location.Name" class="control-label"></label>
                <input asp-for="Location.Name" class="form-control" />
                <span asp-validation-for="Location.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Location.Adress" class="control-label"></label>
                <input asp-for="Location.Adress" class="form-control" />
                <span asp-validation-for="Location.Adress" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Location.Program" class="control-label"></label>
                <input asp-for="Location.Program" class="form-control" />
                <span asp-validation-for="Location.Program" class="text-danger"></span>
            </div>


            <div class="form-group">
    <label asp-for="Location.Phone" class="control-label"></label>
    <input asp-for="Location.Phone" class="form-control" />
    <span asp-validation-for="Location.Phone" class="text-danger"></span>
</div>

<div class="form-group">
    <label asp-for="Location.Email" class="control-label"></label>
    <input asp-for="Location.Email" class="form-control" />
    <span asp-validation-for="Location.Email" class="text-danger"></span>
</div>

<div class="form-group">
    <label asp-for="Location.Website" class="control-label"></label>
    <input asp-for="Location.Website" class="form-control" />
    <span asp-validation-for="Location.Website" class="text-danger"></span>
</div>
<div class="form-group">
    <label asp-for="Location.CompanyRegistrationNumber" class="control-label"></label>
    <input asp-for="Location.CompanyRegistrationNumber" class="form-control" />
    <span asp-validation-for="Location.CompanyRegistrationNumber" class="text-danger"></span>
</div>

             <div class="form-group">
                <label asp-for="Location.Latitude" class="control-label"></label>
                <input asp-for="Location.Latitude" id="Latitude" class="form-control" />
                <span asp-validation-for="Location.Latitude" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Location.Longitude" class="control-label"></label>
                <input asp-for="Location.Longitude" id="Longitude" class="form-control" />
                <span asp-validation-for="Location.Longitude" class="text-danger"></span>
            </div>
            



              <div class="form-group">
                <div class="table">
                    <table>
                         <tr>
                            @{
                               int cnt = 0;
                               foreach (var cat in Model.AssignedCategoryDataList)
                               {
                                   if (cnt++ % 3 == 0)
                                   {
                                   @:</tr><tr>
                                   }
                                   @:<td>
                                       <input type="checkbox"
                                              name="selectedCategories"
                                              value="@cat.CategoryID"
                                              @(Html.Raw(cat.Assigned ?
                                    "checked=\"checked\"" : "")) />
                                   @cat.CategoryID @: @cat.Name
                               @:</td>
                               }
                         @:</tr>
                     }
              </table>
          </div>
        </div>
            <div class="form-group">
                <input type="submit" value="Propose" class="btn btn-primary" />
            </div>
        </form>
    </div>
     <div class="col-md-8">
        <div id="map" style="height: 400px;"></div>
    </div>
    
    <div>
        <a asp-page="./Index">Back to Main page</a>
    </div>
</div>
</body>
</html>



@section Scripts {
       <script>
        var map;
        var geocoder;
        var marker;
        var addressInput;

        function initMap() {
            geocoder = new google.maps.Geocoder();
            map = new google.maps.Map(document.getElementById("map"), {
                center: { lat: 46.770439, lng: 23.591423 },
                zoom: 10,
                mapId: 'fd46ebf30d389dd2',
            });
            marker = new google.maps.Marker({
                position: { lat: 46.770439, lng: 23.591423 },
                map: map,
                draggable: true,
            });
            marker.addListener("dragend", function () {
                var lat = marker.getPosition().lat();
                var lng = marker.getPosition().lng();
                document.getElementById("Latitude").value = lat;
                document.getElementById("Longitude").value = lng;
            });

            addressInput = document.getElementById("Location_Adress");
            addressInput.addEventListener("change", geocodeAddress);
        }

        function geocodeAddress() {
            geocoder.geocode({ "address": addressInput.value }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    map.setCenter(results[0].geometry.location);
                    marker.setPosition(results[0].geometry.location);
                    document.getElementById("Latitude").value = results[0].geometry.location.lat();
                    document.getElementById("Longitude").value = results[0].geometry.location.lng();
                } else {
                    alert("Geocode nu a reușit pentru următorul motiv: " + status);
                }
            });
        }
    </script>
    <script src="~/GoogleMapsApiProxy" async defer></script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
